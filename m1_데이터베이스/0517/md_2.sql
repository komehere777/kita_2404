SELECT * FROM BOOK;
SELECT * FROM CUSTOMER;
SELECT * FROM IMPORTED_BOOK;
SELECT * FROM ORDERS;
SELECT BOOKID,PRICE FROM BOOK;
--중복없이 출력
SELECT DISTINCT PUBLISHER FROM BOOK;

--Q. 가격이 10000원 이상인 도서를 검색
SELECT * FROM BOOK
WHERE PRICE >= 10000;

--Q.가격이 10000원 이상 20000원 이하인 도서를 검색하시오(2가지 방법)
SELECT * FROM BOOK
WHERE PRICE >= 10000 AND PRICE <= 20000;

SELECT * FROM BOOK
WHERE PRICE BETWEEN 10000 AND 20000;

--TASK1_0517. 출판사가 '굿스포츠' 혹은 '대한미디어'인 도서를 검색하시요. 3가지 방법
SELECT * FROM BOOK
WHERE (PUBLISHER='굿스포츠') OR (PUBLISHER='대한미디어');

--TASK2_0517. 출판사가 '굿스포츠' 혹은 '대한미디어'가 아닌 도서를 검색하시요.
SELECT * FROM BOOK
WHERE NOT ((PUBLISHER='굿스포츠') OR (PUBLISHER='대한미디어'));

--LIKE는 정확히 '축구의 역사'와 일치하는 행만 선택
SELECT BOOKNAME, PUBLISHER FROM BOOK
WHERE BOOKNAME LIKE '축구의 역사';

--'축구'가 포함된 출판사
SELECT BOOKNAME, PUBLISHER FROM BOOK
WHERE BOOKNAME LIKE '%축구%';

--도서이름의 왼쪽 두 번째 위치에 '구'라는 문자열을 같는 도서
SELECT BOOKNAME, PUBLISHER FROM BOOK
WHERE BOOKNAME LIKE '_구%';

--TASK3_0517. 축구에 관한 도서중 가격이 20,000원 이상인 도서를 검색하시오.
SELECT * FROM BOOK
WHERE PRICE >= 20000 AND BOOKNAME LIKE '%축구%';

--ORDER BY: 기본 올림차순 정렬(default)
SELECT * FROM BOOK
ORDER BY BOOKNAME;

SELECT * FROM BOOK
ORDER BY BOOKID;

SELECT * FROM BOOK
ORDER BY PRICE;

--내림차순 정렬
SELECT * FROM BOOK
ORDER BY BOOKNAME DESC;

SELECT * FROM BOOK
ORDER BY BOOKID DESC;

SELECT * FROM BOOK
ORDER BY BOOKID DESC;

--Q.도서를 가격순으로 검색하고, 가격이 같으면 이름순으로 검색하시오.
--원하는 순서대로 배열
SELECT * FROM BOOK
ORDER BY PRICE, BOOKNAME; 


SELECT SUM(SALEPRICE) AS "총 판매액"
FROM ORDERS
WHERE CUSTID = 2;

--GROUP BY : 데이터를 특정 기준에 따라 그룹화하는데 사용. 이를 통해 집계 함수(SUM, AVG, MAX, MIN, COUNT)를 이용, 계산
SELECT SUM(SALEPRICE) AS TOTAL,
AVG(SALEPRICE) AS AVERAGE, 
MIN(SALEPRICE) AS MINIMUM,
MAX(SALEPRICE) AS MAXIMUM
FROM ORDERS;

--총판매액을 CUSTID 기준으로 그룹화
SELECT CUSTID, COUNT(*) AS 도서수량, SUM(SALEPRICE) AS "총 판매액"
FROM ORDERS
GROUP BY CUSTID;
--BOOKID가 5보다 큰 조건
SELECT CUSTID, COUNT(*) AS 도서수량, SUM(SALEPRICE) AS "총 판매액"
FROM ORDERS
WHERE BOOKID > 5
GROUP BY CUSTID;
--도서 수량이 2보다 큰 조건 HAVING은 맨 마지막
SELECT CUSTID, COUNT(*) AS 도서수량, SUM(SALEPRICE) AS "총 판매액"
FROM ORDERS
WHERE BOOKID > 5 
GROUP BY CUSTID
HAVING COUNT(*) >2;

